apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'

def keystorePropertiesFile = new File(rootProject.projectDir, 'keystore.properties')

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "org.sil.storyproducer"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 17
        versionName '3.0.2'
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        if (keystorePropertiesFile.isFile()) {
            logger.lifecycle("keystore.properties exists. Sign APK.")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
        else
        {
            logger.lifecycle("keystore.properties not found. Unable to sign APK.")
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def versionPart = variant.name;
            if (variant.name != "debug") {
                if (keystorePropertiesFile.isFile()) {
                    versionPart = variant.versionName;
                } else {
                    versionPart = versionPart + "-not-signed";
                }
            }
            outputFileName = "SP-${versionPart}.apk"
        }
    }
    buildTypes {
        release {
            if (keystorePropertiesFile.isFile()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix ".debug"
        }
        continuous {
            initWith release
            applicationIdSuffix ".ci"
            println "Using ci/google-services.json"
            copy {
                from 'ci'
                include '*.json'
                into '.'
            }
        }
    }
    productFlavors {
    }
    packagingOptions {
        pickFirst("META-INF/atomicfu.kotlin_module")
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    google()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'net.i2p.android.ext:floatingactionbutton:1.10.1'
    implementation 'com.github.futuresimple:android-floating-action-button:1.10.1'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.arthenica:mobile-ffmpeg-full:4.2.LTS'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.github.codekidX:storage-chooser:2.0.3'
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.opencsv:opencsv:4.3.2'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.webkit:webkit:1.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'net.lingala.zip4j:zip4j:2.3.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'org.mockito:mockito-core:2.23.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
}

